# Test runner for volume  category
#

# State variables shared between create and destroy functions.
_snap_name="_snappysnap"

function volume_create() {
	print(">>> Starting volume tests")

	VOL_OBJECT = @$(volume create name=${VOL_NAME} disks=auto layout=auto)
	maybe_barf(_success, "+volume#1", "Unable to create volume " + VOL_NAME)
	@$(VOL_OBJECT scrub)
	maybe_barf(_success, "+volume#2", "Scrub of volume " + VOL_NAME + " failed")
	@$(VOL_OBJECT upgrade)
	maybe_barf(_success, "+volume#3", "Upgrade of volume " + VOL_NAME + " failed")
	_x=$(VOL_OBJECT get size)
	maybe_barf(_success, "+volume#4", "Unable to get size for volume " + VOL_NAME)
	maybe_barf(_x > 0, "+volume#5", "Insane size reported for " + VOL_NAME)

	SNAP_OBJECT=@$(VOL_OBJECT snapshot create dataset=${VOL_NAME} recursive=yes name=${VOL_NAME+"@"+_snap_name})
	maybe_barf(_success, "+volume#6", "Unable to create snapshot for volume " + VOL_NAME + " named " + _snap_name)
	_x = $(VOL_OBJECT snapshot show | find name==${VOL_NAME+"@"+_snap_name})
	maybe_barf(_success, "+volume#7", "Unable to find created snapshot for volume " + VOL_NAME + " named " + _snap_name)
	maybe_barf(_x == $(SNAP_OBJECT get name), "+volume8", "Snapshot names do not agree: " + _x + " and " + $(SNAP_OBJECT get name))

	_x = $(VOL_OBJECT get guid)
	maybe_barf(_success, "+volume9", "Unable to get guid for volume " + VOL_NAME)
	@$(VOL_OBJECT detach)
	maybe_barf(_success, "+volume10", "Unable to detach volume " + VOL_NAME)

	@$(volume import ${_x})
	maybe_barf(_success, "+volume11", "Unable to re-import volume " + VOL_NAME)
}

function volume_destroy() {
	print(">>> Finishing volume tests")
	@$(SNAP_OBJECT delete)
	maybe_barf(_success, "-volume#1", "Unable to delete snapshot " + _snap_name + " from volume " + VOL_NAME)
	@$(VOL_OBJECT delete)
	maybe_barf(_success, "-volume#2", "Unable to delete volume " + VOL_NAME)
}
