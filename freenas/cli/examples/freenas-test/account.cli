# Test runner for account  category
#

# State variables shared between create and destroy functions.
_user_obj=null
_group_obj=null
_account_hard_count=20
_account_hard_uarr = []
_account_hard_garr = []

function account_create() {
	print(">>> Starting account tests")
	@$(VOL_OBJECT dataset create name=${VOL_NAME + "/home"})
	maybe_barf(_success, "+account#1", "Unable to create home dataset on volume " + VOL_NAME)

	_user_obj = @$(account user create name=${TEST_USER} fullname="My Test User" home=${"/mnt/" + VOL_NAME + "/home"} password_disabled=yes)
	maybe_barf(_success, "+account#2", "Unable to create user " + TEST_USER)
	_olduid=$(_user_obj get uid)
	maybe_barf(_success, "+account#3", "Cannot get uid value for user " + TEST_USER)
	maybe_die(typeof(_olduid) == "int", "+account#4", "Type of uid for " + TEST_USER + " not an integer")
	maybe_barf(_olduid > 0, "+account#4", "Invalid uid value for user " + TEST_USER)
	@$(_user_obj set uid=100000)
	maybe_barf(_success, "+account#5", "Cannot set uid to new value for user " + TEST_USER)
	if (_success == true) {
	    @$(_user_obj set uid=${_olduid})
	    maybe_barf(_success, "+account#6", "Cannot restore uid value for user " + TEST_USER)
	}
	
	_group_obj = @$(account group create name=${TEST_GROUP})
	maybe_barf(_success, "+account#7", "Unable to create group " + TEST_GROUP)
	_oldgid=$(_group_obj get gid)
	maybe_barf(_success, "+account#8", "Cannot get gid value for group " + TEST_GROUP)
	maybe_die(typeof(_oldgid) == "int", "+account#9", "Type of gid for " + TEST_GROUP + " not an integer")
	maybe_barf(_oldgid > 0, "+account#10", "Invalid gid value for group " + TEST_GROUP);
	@$(_group_obj set gid=100000)
	maybe_barf(_success, "+account#11", "Cannot set gid to new value for group " + TEST_GROUP)
	if (_success == true) {
	    @$(_group_obj set gid=${_oldgid})
	    maybe_barf(_success, "+account#12", "Cannot restore gid value for group " + TEST_GROUP)
	}
}

function account_destroy() {
	print(">>> Finishing account tests")
	@$(_user_obj delete)
	maybe_barf(_success, "-account#1", "Unable to delete user " + TEST_USER)
	@$(account group ${TEST_USER} delete)
	maybe_barf(_success, "-account#2", "Unable to delete private group for user " + TEST_USER)
	@$(_group_obj delete)
	maybe_barf(_success, "-account#3", "Unable to delete group " + TEST_GROUP)
	@$(VOL_OBJECT dataset ${VOL_NAME + "/home"} delete)
	maybe_barf(_success, "-account#4", "Unable to delete temporary home dataset on " + VOL_NAME)
}

function account_hard_create() {
	printf(">>> Starting account stress tests: %d users and groups\n", _account_hard_count)

	for (i in mapf(range(0, _account_hard_count), TEST_USER + "%d")) {
	    _x = @$(account user create name=${i} fullname=${"My Test User " + i} home=${sprintf("/mnt/%s/home/%s", VOL_NAME, i)} password_disabled=yes)
	    if (not maybe_barf(_success, "+account-hard#1", "Unable to create user " + i)) {
	       append(_account_hard_uarr, _x)
	    }
	}
	_l = count_by_name("account user", TEST_USER + "[0-9]+")
	maybe_barf(_l == _account_hard_count, "+account-hard#2", "User count of " + str(_l) + " does not match " + str(_account_hard_count))
	for (i in mapf(range(0, _account_hard_count), TEST_GROUP + "%d")) {
	    _x = @$(account group create name=${i})
	    if (not maybe_barf(_success, "+account-hard#3", "Unable to create group " + i)) {
	        append(_account_hard_garr, _x)
	    }
	}
	_l = count_by_name("account group", TEST_GROUP + "[0-9]+")
	maybe_barf(_l == _account_hard_count, "+account-hard#3", "Group count of " + str(_l) + " does not match " + str(_account_hard_count))
}

function account_hard_destroy() {
	printf(">>> Finishing account stress tests: %d users and groups\n", _account_hard_count)

	for (i in _account_hard_uarr) {
	    _n = $(i get name)
	    @$(i delete)
	    maybe_barf(_success, "-account-hard#1", "Unable to delete user " + _n)
	    # XXX delete this if delete private group support goes in.
	    @$(account group ${_n} delete)
	    maybe_barf(_success, "-account-hard#2", "Unable to delete user group " + _n)
	}
	_l = count_by_name("account user", TEST_USER + "[0-9]+")
	maybe_barf(_l == 0, "-account-hard#3", "Unable to delete all test users: " + str(_l) + " remaining.")

	for (i in _account_hard_garr) {
	    _n = $(i get name)
	    @$(i delete)
	    maybe_barf(_success, "-account-hard#4", "Unable to delete group " + _n)
	}
	_l = count_by_name("account group", TEST_GROUP + "[0-9]+")
	maybe_barf(_l == 0, "-account-hard#4", "Unable to delete all test groups: " + str(_l) + " remaining.")
}
