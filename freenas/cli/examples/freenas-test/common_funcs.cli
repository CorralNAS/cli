# Common functions for all the tests

_sentinel_tag="_running_tests"

function maybe_barf(flag, test, str) {
	if (flag != true) {
	    printf("ERROR %s in %s\n", str, test)
	    fprintf(output_handle, "ERROR %s in %s\n", str, test)
	    if (_exit_on_error == "yes") {
		exit 1
	    }
	}
	return not flag
}

function maybe_die(flag, test, str) {
	if (flag != true) {
	    printf("FATAL error %s in %s\n", str, test)
	    fprintf(output_handle, "FATAL error %s in %s\n", str, test)
	    exit 2
	}
	return not flag
}	

function find_by_name(where, name) {
	return eval(sprintf("%s show | search name ~= \"%s\"", where, name))[0]
}

function count_by_name(where, name) {
	_x = find_by_name(where, name)
	return length(_x)
}

function action_by_name(where, name, action) {
	x = find_by_name(where, name)
	if (x != null) {
	    for (i in x) {
	    	eval(sprintf("%s %s %s", where, i["name"], action))
	    }
	}
}

# Functions to detect if tests are already running on a machine.
function test_sentinel() {
	return contains($(system get tags), _sentinel_tag)
}

function set_sentinel() {
	if (test_sentinel()) {
	   print("Warning: Sentinel tag " + _sentinel_tag + " was already set.")
	} else {
	   @$(system set tags =+ ${_sentinel_tag})
	   maybe_barf(_success, "set_sentinel", "Unable to set tag " + _sentinel_tag)
	}
}

function clear_sentinel() {
	if (not test_sentinel()) {
	   print("Warning: Sentinel tag " + _sentinel_tag + " not set.")
	} else {
	   @$(system set tags =- ${_sentinel_tag})
	   maybe_barf(_success, "clear_sentinel", "Unable to clear tag " + _sentinel_tag)
	}
}

# Just try to clean up everything a failed test (and failed destroy)
# might have left behind, as a last resort.
function nuke_from_orbit() {
	# This should take care of snapshots / datasets / VMs / containers too
	volume ${VOL_NAME} delete

	action_by_name("account user", TEST_USER + ".*", "delete")
	action_by_name("account group", TEST_USER + ".*", "delete")
	action_by_name("account group", TEST_GROUP + ".*", "delete")
	action_by_name("calendar command", _cmd_name + ".*", "delete")
	action_by_name("calendar scrub", _scrub_name + ".*", "delete")
	action_by_name("boot environment", _test_bootenv + ".*", "delete")
}

