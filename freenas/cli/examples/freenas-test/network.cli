# Test runner for network  category
#

_test_host="_test_host"
_test_network="10.99.100"
_network_hard_count=50
_network_hard_narr = []

function good_char(c) {
	i = c + 65;
	if (i > 90 and i < 97) { i = i + 6 }
	return i
}

function network_create() {
	print(">>> Starting network tests")
	@$(network host create name=${_test_host} addresses=${_test_network + ".1"})
	maybe_barf(_success, "network#1", "Unable to create host entry " + _test_host)
}

function network_destroy() {
	print(">>> Finishing network tests")
	@$(network host ${_test_host} delete)
}

function network_hard_create() {
	print(">>> Starting network stress tests")
	for (i = 0; i < _network_hard_count; i = i + 1) {
		_hname = ${_test_host + sprintf("%c", good_char(i))}
		_x = @$(network host create name=${_hname} addresses=${_test_network + "." + str(i)})
		if (not maybe_barf(_success, "network-hard#1", "Unable to create host entry " + ${_hname})) {
		    append(_network_hard_narr, _x)
		}
	}

    _l = count_by_name("network host", _test_host + "[A-Za-z]+")
    maybe_barf(_l == _network_hard_count, "+network-hard#2", "Host entry count of " + str(_l) + " does not match " + str(_network_hard_count))
}

function network_hard_destroy() {
	print(">>> Finishing network stress tests")
        for (i in _network_hard_narr) {
            _n = $(i get name)
            @$(i delete)
            maybe_barf(_success, "-network-hard#1", "Unable to delete host entry " + _n)
	}
	
    _l = count_by_name("network host", _test_host + "[A-Za-z]+")
    maybe_barf(_l == 0, "-network-hard#2", "Unable to delete all host entries: " + str(_l) + " remaining.")
}
