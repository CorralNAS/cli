# Test runner for tunable  category
#

_tunable_var_loader="test_tunable_loader"
_tunable_val_loader="test"
_tunable_var_rc="test_tunable_rc"
_tunable_val_rc="test"
_tunable_var_sysctl="kern.sync_on_panic"
_tunable_val_sysctl=1

_tunable_hard_count=50
_tunable_hard_arr = []

function tunable_create() {
	print(">>> Starting tunable tests")
	@$(tunable create type=LOADER name=${_tunable_var_loader} value=${_tunable_val_loader})
	maybe_barf(_success, "tunable#1", "Unable to create loader variable " + _tunable_var_loader)
	@$(tunable create type=RC name=${_tunable_var_rc} value=${_tunable_val_rc})
	maybe_barf(_success, "tunable#2", "Unable to create rc variable " + _tunable_var_rc)
	@$(tunable create type=SYSCTL name=${_tunable_var_sysctl} value=${_tunable_val_sysctl})
	maybe_barf(_success, "tunable#3", "Unable to set sysctl variable " + _tunable_var_sysctl)
}

function tunable_destroy() {
	print(">>> Finishing tunable tests")
	@$(tunable ${_tunable_var_loader} delete)
	maybe_barf(_success, "-tunable#1", "Unable to delete loader variable " + _tunable_var_loader)
	@$(tunable ${_tunable_var_rc} delete)
	maybe_barf(_success, "-tunable#2", "Unable to delete rc variable " + _tunable_var_rc)
	@$(tunable ${_tunable_var_sysctl} delete)
	maybe_barf(_success, "-tunable#3", "Unable to delete sysctl variable " + _tunable_var_sysctl)
}

function tunable_hard_create() {
	print(">>> Starting tunable stress tests")
	for (i in mapf(range(0, _tunable_hard_count), _tunable_var_rc + "%d")) {
	    _x = @$(tunable create type=RC name=${i} value=${_tunable_val_rc})
	    if (not maybe_barf(_success, "tunable-hard#1", "Unable to create RC tunable " + i)) {
		append(_tunable_hard_arr, _x)
	    }
	}
	_l = count_by_name("tunable", _tunable_var_rc + "[0-9]+")
	maybe_barf(_l == _tunable_hard_count, "+tunable-hard#2", "Tunable count of " + str(_l) + " does not match " + str(_tunable_hard_count))
}

function tunable_hard_destroy() {
	print(">>> Finishing tunable stress tests")
	for (i in _tunable_hard_arr) {
	    _n = $(i get name)
	    @$(i delete)
	    maybe_barf(_success, "-tunable-hard#1", "Unable to delete tunable " + _n)
	}
	_l = count_by_name("tunable", _tunable_var_rc + "[0-9]+")
	maybe_barf(_l == 0, "tunable-hard#2", "Unable to delete all tunables: " + str(_l) + " remaining.")
}
