# Test runner for docker  category
#

# State variables shared between create and destroy functions.
_alpine_container=null
_container_name="docker_test_container"
_image_name="freenas/alpine"
_container_hard_count=20
_container_arr = []

function docker_create() {
	print(">>> Starting docker tests")
	_alpine_container = @$(docker container create image=${_image_name} name=${_container_name} command="/bin/sh" interactive=yes)
	maybe_barf(_success, "+docker#1", "Unable to create docker container " + _container_name)
	_x = $(_alpine_container get name)
	if (_x != _container_name) {
	    maybe_barf(_success, "+docker#2", "docker container name is not " + _container_name)
	}
	_y = $(docker image show | find name ~= alpine)
	maybe_barf(_y == "freenas/alpine:latest", "+docker#3", "docker image for alpine not found")
	@$(_alpine_container start)
	maybe_barf(_success, "+docker#3", "unable to start docker container " + _container_name)
	@$(_alpine_container stop)
	maybe_barf(_success, "+docker#4", "unable to stop docker container " + _container_name)
}

function docker_destroy() {
	print(">>> Finishing docker tests")
	if (_alpine_container != null) {
		@$(_alpine_container delete)
		p=" (promise) "
	} else {
		@$(docker container ${_container_name} delete)
		p=" "
	}
	maybe_barf(_success, "-docker#1", "unable to delete docker container" + p + _container_name)
}

function container_hard_create() {
	printf(">>> Starting Docker stress tests: %d containers\n", _container_hard_count)
	for (i in mapf(range(0, _container_hard_count), _container_name + "%d")) {
	    _x = @$(docker container create image=${_image_name} name=${i} command="/bin/sh" interactive=yes)
	    if (not maybe_barf(_success, "+docker-hard#1", "Unable to create container " + i)) {
	        append(_container_arr, _x)
		@$(_x start)
		maybe_barf(_success, "+docker-hard#2", "Unable to start container " + i)
		@$(_x stop)
		maybe_barf(_success, "+docker-hard#3", "Unable to stop container " + i)
	    }
	}
	_l = count_by_name("docker container", _container_name + "[0-9]+")
	maybe_barf(_l == _container_hard_count, "+docker-hard#2", "Container count of " + str(_l) + " does not match " + str(_container_hard_count))
}

function container_hard_destroy() {
	print(">>> Finishing docker stress tests")
	for (i in _container_arr) {
	    _n = $(i get name)
	    @$(i delete)
	    maybe_barf(_success, "-docker-hard#1", "Unable to delete container " + _n)
	}
	_l = count_by_name("docker container", _container_name + "[0-9]+")
	maybe_barf(_l == 0, "-docker-hard#2", "Unable to delete all Containers:  " + str(_l) + " remaining.")
}


