# Test runner for boot  category
#

_test_bootenv="_test_BE"
_boot_env = none
_boot_hard_count = 5
_boot_hard_arr = []

function boot_create() {
	print(">>> Starting boot tests")
	_boot_env = @$(boot environment create name=${_test_bootenv} keep=no)
	maybe_barf(_success, "+boot#2", "Unable to create boot environment " + _test_bootenv)
	@$(_boot_env set keep=yes)
	maybe_barf(_success, "+boot#3", "Unable to set keep flag for " + _test_bootenv)
	maybe_barf($(_boot_env get keep)==true, "+boot#4", "Keep flag for " + _test_bootenv + " is not set to true")
	@$(boot pool scrub)
	maybe_barf(_success, "+boot#5", "Unable to scrub boot pool")
	_x = $(boot pool show_disks)
	maybe_barf(length(_x) > 0, "+boot#6", "Boot pool has an invalid number of disks")
}

function boot_destroy() {
	print(">>> Finishing boot tests")
	@$(_boot_env delete)
	maybe_barf(_success, "-boot#1", "Unable to delete test boot environment")
}

function boot_hard_create() {
	print(">>> Starting boot stress tests")
	for (i in mapf(range(0, _boot_hard_count), _test_bootenv + "%d")) {
	    _x = @$(boot environment create name=${i} keep=no)
	    if (not maybe_barf(_success, "+boot-hard#1", "Unable to create boot environment " + i)) {
	       append(_boot_hard_arr, _x)
	    }
	}
	_l = count_by_name("boot environment", _test_bootenv + "[0-9]+")
	maybe_barf(_l == _boot_hard_count, "+boot-hard#2", "boot environment count of " + str(_l) + " does not match " + str(_boot_hard_count))
}

function boot_hard_destroy() {
	print(">>> Finishing boot stress tests")
	for (i in _boot_hard_arr) {
	    _n = $(i get name)
	    @$(i delete)
	    maybe_barf(_success, "-boot-hard#1", "Unable to delete boot environment " + _n)
	}
	_l = count_by_name("boot environment", _test_bootenv + "[0-9]+")
	maybe_barf(_l == 0, "-boot-hard#2", "Unable to delete all boot environments - " + str(_l) + " still remaining.")
}
