#
# Top-level test runner.  Source this file to run all of the tests, behavior
# which can be optionally overridden by setting TEST_SET below to your own
# value.

TEST_SET=[ "disk", "volume", "network", "service", "system", "account", "share", "boot", "session", "task", "alert", "calendar", "tunable", "vm", "docker" ]

# Future use - someday this will cause the tests to exit upon any error.
_exit_on_err=false

# Where to run all of these scripts from.
TOP_DIR=${cli_src_path+"/examples/freenas-test/"}

# Set this to yes if you want to run the more stressy-tests
test_me_harder=false

# Some constants which will be shared across tests, hence "global" - they do not have underscores prepended to their names to
# designate them as such.
TEST_USER="mytestuser"
TEST_GROUP="mytestgroup"
VOL_NAME="test_tank"
VOL_OBJECT=null
SNAP_OBJECT=null

source ${TOP_DIR + "common_funcs.cli"}

# Set some sensible default options before beginning the test run
setopt rollbar_enabled=no

function load_all() {
	 for (test in TEST_SET) {
	 	_path=${TOP_DIR + test + ".cli"}
		print(">> Loading " + _path)
		source ${_path}
		if (_success != true) {
			print(_path + " test script not found")
			remove(TEST_SET, test)
		}
	}
}

# Run all of the create functions.
function create_all() {
	setopt abort_on_errors=yes
	for (test in TEST_SET) {
		eval(test + "_create()")
	}
}

# Run all of the destroy (cleanup) functions.
function destroy_all() {
	setopt abort_on_errors=no
	for (test in TEST_SET) {
		eval(test + "_destroy()")
	}
}

# OK do it.
load_all()

x = readline("All tests loaded. Ready to run them? ([y] / n) ")
if (x == "yes" or x == "y" or x == "") {
	create_all()
	destroy_all()
} else {
	print("You can run the tests yourself by calling create_all()")
	print("(or testname_create()) then destroy_all() (or testname_destroy())")
}	
